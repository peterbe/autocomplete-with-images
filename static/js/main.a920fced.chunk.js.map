{"version":3,"sources":["index.js"],"names":["lazyloadImage","ShowAutocompleteResults","_ref2","results","count","search","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","className","toLocaleString","length","concat","map","p","imgUrl","id","key","ShowImage","url","alt","filename","react_highlight_words__WEBPACK_IMPORTED_MODULE_5___default","searchWords","textToHighlight","author","width","height","format","loadedOnce","Set","Image","src","React","memo","_ref3","_useState9","useState","has","_useState10","Object","_Users_peterbe_dev_JAVASCRIPT_autocomplete_with_images_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","setSrc","preloadImg","dismounted","useEffect","cb","Error","add","decode","then","onload","decoding","rootElement","document","getElementById","ReactDOM","render","_useState","_useState2","setResults","_useState3","_useState4","resultsCount","setResultsCount","_useState5","_useState6","setSearch","_useState7","JSON","parse","sessionStorage","getItem","_useState8","allPictures","setAllPictures","_ref","_Users_peterbe_dev_JAVASCRIPT_autocomplete_with_images_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_peterbe_dev_JAVASCRIPT_autocomplete_with_images_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","res","pictures","wrap","_context","prev","next","fetch","sent","json","setItem","stringify","stop","_x","apply","this","arguments","trim","searchFor","toLowerCase","found","filter","includes","slice","type","placeholder","value","onChange","e","target"],"mappings":"wOAMMA,SAA6B,kCAmEnC,SAASC,EAATC,GAA6D,IAA1BC,EAA0BD,EAA1BC,QAASC,EAAiBF,EAAjBE,MAAOC,EAAUH,EAAVG,OACjD,OAAKF,EAEHG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,SACSL,EAAMM,iBACZN,EAAQD,EAAQQ,QAAhB,wBAAAC,OAAkDT,EAAQQ,SAE5DR,EAAQU,IAAI,SAAAC,GACX,IAAMC,EAAM,yCAAAH,OAA4CE,EAAEE,IAC1D,OACEV,EAAAC,EAAAC,cAAA,OAAKS,IAAKH,EAAEE,IACVV,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACU,EAAD,CAAWC,IAAKJ,EAAQK,IAAKN,EAAEO,WAC/Bf,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CACEgB,YAAa,CAAClB,GACdmB,gBAAiBV,EAAEW,WAIzBnB,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CACEgB,YAAa,CAAClB,GACdmB,gBAAiBV,EAAEO,YAGvBf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,aACGM,EAAEY,MADL,IACaZ,EAAEa,OADf,KACyBb,EAAEc,OAD3B,KAGAtB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAAOO,QAhCE,KA6CvB,IAAMc,EAAa,IAAIC,KAEvB,IAAIC,OAAQC,IAAMhC,EAElB,IAAMkB,EAAYe,IAAMC,KAAK,SAAAC,GAAkB,IAAfhB,EAAegB,EAAfhB,IAAKC,EAAUe,EAAVf,IAAUgB,EACvBC,mBAASR,EAAWS,IAAInB,GAAOA,EAAMnB,GADduC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACtCJ,EADsCO,EAAA,GACjCG,EADiCH,EAAA,GAEzCI,EAAa,KACbC,GAAa,EAqCjB,OApCAC,oBAAU,WACR,GAAIb,IAAQhC,EAAe,KAIhB8C,EAAT,WAKE,GAJKF,GACHF,EAAOvB,GAGLU,EAAWS,IAAInB,GACjB,MAAM,IAAI4B,MAAJ,GAAAnC,OAAaO,EAAb,mCAERU,EAAWmB,IAAI7B,KAVjBwB,EAAa,IAAIZ,OAcNC,IAAMb,EAGjBwB,EAAWM,OACPN,EAAWM,SAASC,KAAKJ,GACxBH,EAAWQ,OAASL,EAEzBH,EAAWS,SAAW,OAGxB,OAAO,WACDT,IAGFA,EAAWX,IAAM,IAEnBY,GAAa,IAEd,IACItC,EAAAC,EAAAC,cAAA,OAAKwB,IAAKA,EAAKZ,IAAKA,MAGvBiC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOnD,EAAAC,EAAAC,cA/JhB,WAAe,IAAAkD,EACiBrB,mBAAS,MAD1BsB,EAAAnB,OAAAC,EAAA,EAAAD,CAAAkB,EAAA,GACNvD,EADMwD,EAAA,GACGC,EADHD,EAAA,GAAAE,EAE2BxB,mBAAS,GAFpCyB,EAAAtB,OAAAC,EAAA,EAAAD,CAAAqB,EAAA,GAENE,EAFMD,EAAA,GAEQE,EAFRF,EAAA,GAAAG,EAGe5B,mBAAS,IAHxB6B,EAAA1B,OAAAC,EAAA,EAAAD,CAAAyB,EAAA,GAGN5D,EAHM6D,EAAA,GAGEC,EAHFD,EAAA,GAAAE,EAOyB/B,mBACpCgC,KAAKC,MAAMC,eAAeC,QAAQ,gBAAkB,SARzCC,EAAAjC,OAAAC,EAAA,EAAAD,CAAA4B,EAAA,GAONM,EAPMD,EAAA,GAOOE,EAPPF,EAAA,GAqCb,OA3BA5B,oBAAU,WACH6B,GACH,eAAAE,EAAApC,OAAAqC,EAAA,EAAArC,CAAAsC,EAAAvE,EAAAwE,KAAC,SAAAC,EAAM7D,GAAN,IAAA8D,EAAAC,EAAA,OAAAJ,EAAAvE,EAAA4E,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACmBC,MAAMpE,GADzB,cACO8D,EADPG,EAAAI,KAAAJ,EAAAE,KAAA,EAEwBL,EAAIQ,OAF5B,OAEOP,EAFPE,EAAAI,KAGCb,EAAeO,GACfX,eAAemB,QAAQ,cAAerB,KAAKsB,UAAUT,IAJtD,wBAAAE,EAAAQ,SAAAZ,MAAD,gBAAAa,GAAA,OAAAjB,EAAAkB,MAAAC,KAAAC,YAAA,GAKG,+BAEJ,CAACtB,IAEJ7B,oBAAU,WACR,IAAKxC,EAAO4F,OACV,OAAOrC,EAAW,MAGpB,IAAMsC,EAAY7F,EAAO8F,cACnBC,EAAQ1B,EAAY2B,OAAO,SAAAvF,GAC/B,OACEA,EAAEW,OAAO0E,cAAcG,SAASJ,IAC/BA,EAAUvF,OAAS,GAAKG,EAAEO,SAASiF,SAASjG,KAGjD2D,EAAgBoC,EAAMzF,QACtBiD,EAAWwC,EAAMG,MAAM,EAAG,MACzB,CAAClG,IAGFC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEgG,KAAK,OACLC,YAAY,2BACZC,MAAOrG,EACPsG,SAAU,SAAAC,GAAC,OAAIzC,EAAUyC,EAAEC,OAAOH,WAItCpG,EAAAC,EAAAC,cAACP,EAAD,CACEI,OAAQA,EACRF,QAASA,EACTC,MAAO2D,IAETzD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,aACmB,OAAhBkE,EACG,kCADH,sBAAA9D,OAEyB8D,EAAY/D,OAAOD,iBAF5C,iBAuGK,MAAS2C","file":"static/js/main.a920fced.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Highlighter from \"react-highlight-words\";\nimport \"./styles.css\";\n\nconst PUBLIC_URL = process.env.PUBLIC_URL || \"\";\nconst lazyloadImage = PUBLIC_URL + \"/static/lazyload-thumbnail.png\";\n\nfunction App() {\n  const [results, setResults] = useState(null);\n  const [resultsCount, setResultsCount] = useState(0);\n  const [search, setSearch] = useState(\"\");\n\n  // Using sessionStorage is just a trick to avoid having to download\n  // all these every time you reload the app.\n  const [allPictures, setAllPictures] = useState(\n    JSON.parse(sessionStorage.getItem(\"allPictures\") || \"null\")\n  );\n  useEffect(() => {\n    if (!allPictures) {\n      (async url => {\n        const res = await fetch(url);\n        const pictures = await res.json();\n        setAllPictures(pictures);\n        sessionStorage.setItem(\"allPictures\", JSON.stringify(pictures));\n      })(\"https://picsum.photos/list\");\n    }\n  }, [allPictures]);\n\n  useEffect(() => {\n    if (!search.trim()) {\n      return setResults(null);\n    }\n\n    const searchFor = search.toLowerCase();\n    const found = allPictures.filter(p => {\n      return (\n        p.author.toLowerCase().includes(searchFor) ||\n        (searchFor.length > 2 && p.filename.includes(search))\n      );\n    });\n    setResultsCount(found.length);\n    setResults(found.slice(0, 10));\n  }, [search]);\n\n  return (\n    <div className=\"App\">\n      <h1>\n        <input\n          type=\"text\"\n          placeholder=\"Type your search here...\"\n          value={search}\n          onChange={e => setSearch(e.target.value)}\n        />\n      </h1>\n\n      <ShowAutocompleteResults\n        search={search}\n        results={results}\n        count={resultsCount}\n      />\n      <hr />\n      <p>\n        <small>\n          {allPictures === null\n            ? \"Downloading list of pictures...\"\n            : `Downloaded list of ${allPictures.length.toLocaleString()} pictures`}\n        </small>\n      </p>\n    </div>\n  );\n}\n\nfunction ShowAutocompleteResults({ results, count, search }) {\n  if (!results) return null;\n  return (\n    <div className=\"suggestions\">\n      <p className=\"meta\">\n        Found {count.toLocaleString()}\n        {count > results.length && `, only showing first ${results.length}`}\n      </p>\n      {results.map(p => {\n        const imgUrl = `https://picsum.photos/1000/1000?image=${p.id}`;\n        return (\n          <div key={p.id}>\n            <p>\n              <ShowImage url={imgUrl} alt={p.filename} />\n              <b>\n                <Highlighter\n                  searchWords={[search]}\n                  textToHighlight={p.author}\n                />\n              </b>\n            </p>\n            <p>\n              <code>\n                <Highlighter\n                  searchWords={[search]}\n                  textToHighlight={p.filename}\n                />\n              </code>\n              <br />\n              <small>\n                {p.width}x{p.height} ({p.format})\n              </small>\n              <br />\n              <code>{imgUrl}</code>\n            </p>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\n// Module level \"cache\" of which URLs have been successfully inserted\n// into the DOM at least once.\n// By knowing these, we can, on repeat URLs, avoid the whole lazy-load\n// image swapping trick.\nconst loadedOnce = new Set();\n\nnew Image().src = lazyloadImage;\n\nconst ShowImage = React.memo(({ url, alt }) => {\n  const [src, setSrc] = useState(loadedOnce.has(url) ? url : lazyloadImage);\n  let preloadImg = null;\n  let dismounted = false;\n  useEffect(() => {\n    if (src === lazyloadImage) {\n      // We need to preload the eventually needed image.\n      preloadImg = new Image();\n\n      function cb() {\n        if (!dismounted) {\n          setSrc(url);\n        }\n        // XXX not sure it's worth keeping this\n        if (loadedOnce.has(url)) {\n          throw new Error(`${url} has already been loaded once!`);\n        }\n        loadedOnce.add(url);\n      }\n      // This must come before .decode() otherwise Safari will\n      // raise an EncodingError.\n      preloadImg.src = url;\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#dom-img-decode\n      // https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/decode#Browser_compatibility\n      preloadImg.decode\n        ? preloadImg.decode().then(cb)\n        : (preloadImg.onload = cb);\n      // https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/decoding\n      preloadImg.decoding = \"sync\";\n    }\n\n    return () => {\n      if (preloadImg) {\n        // Immediately undo the preloading since we might not need this image.\n        // See https://jsfiddle.net/nw34gLgt/ for demo of this technique.\n        preloadImg.src = \"\";\n      }\n      dismounted = true;\n    };\n  }, []);\n  return <img src={src} alt={alt} />;\n});\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}